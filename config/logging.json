{
	"configuration": {
		"status": "off",
		"name": "mongoose",
		"monitorInterval": 1000,
		"packages": "com.emc.mongoose.ui.log.appenders",
		"shutdownHook": "enable",
		"appenders": {
			"appender" : [
				{
					"name" : "WebUI",
					"type" : "WebUI",
					"enabled" : "true",
					"Filters" : {
						"Filter" : [
							{
								"type": "MarkerFilter",
								"marker": "cfg",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "ioTrace",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "stdout",
					"type": "Console",
					"follow": "true",
					"PatternLayout": {
						"alwaysWriteExceptions" : false,
						"pattern": "%highlight{%d{ISO8601}{GMT+0} %p{length=1} %-20.-20c{1} %-30.-30t %m%n}"
					},
					"Filters": {
						"Filter" : [
							{
								"type": "MarkerFilter",
								"marker": "cfg",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsFile",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsMedFile",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsFileTotal",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsMedFileTotal",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "ioTrace",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "mpu",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "msgFile",
					"type": "loadJobFile",
					"fileName": "messages.log",
					"PatternLayout": {
						"pattern": "%d{ISO8601}{GMT+0} | %p | %c{1} | %t | %m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "msg",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "3rdPartyFile",
					"type": "loadJobFile",
					"fileName": "3rdparty.log",
					"PatternLayout": {
						"pattern": "%d{ISO8601}{GMT+0} | %p | %c{1} | %t | %m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "cfg",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "msg",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "err",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsStdout",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsMedStdout",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsFile",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsMedFile",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsFileTotal",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "metricsMedFileTotal",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "ioTrace",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "MarkerFilter",
								"marker": "mpu",
								"onMatch": "DENY",
								"onMismatch": "NEUTRAL"
							}, {
								"type": "ThresholdFilter",
								"level": "debug",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							}, {
								"type": "BurstFilter",
								"rate": 10,
								"maxBurst": 100
							}
						]
					}
				}, {
					"name": "errFile",
					"type": "loadJobFile",
					"fileName": "errors.log",
					"PatternLayout": {
						"pattern": "%d{ISO8601}{GMT+0} | %p | %c{1} | %t | %m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "err",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}, {
								"type": "BurstFilter",
								"rate": 10,
								"maxBurst": 100
							}
						]
					}
				}, {
					"name": "metricsMedFile",
					"type": "loadJobFile",
					"fileName": "metrics.med.csv",
					"PatternLayout": {
						"header": "DateTimeISO8601,TypeLoad,CountSucc,CountFail,Size,JobDuration[s],DurationSum[s],TPAvg[op/s],TPLast[op/s],BWAvg[MB/s],BWLast[MB/s],DurationAvg[us],DurationMin[us],DurationLoQ[us],DurationMed[us],DurationHiQ[us],DurationMax[us],LatencyAvg[us],LatencyMin[us],LatencyLoQ[us],LatencyMed[us],LatencyHiQ[us],LatencyMax[us]\n",
						"pattern": "%m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "metricsMedFile",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							},
							{
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "metricsMedFileTotal",
					"type": "loadJobFile",
					"fileName": "metrics.med.total.csv",
					"PatternLayout": {
						"header": "DateTimeISO8601,TypeLoad,CountSucc,CountFail,Size,JobDuration[s],DurationSum[s],TPAvg[op/s],TPLast[op/s],BWAvg[MB/s],BWLast[MB/s],DurationAvg[us],DurationMin[us],DurationLoQ[us],DurationMed[us],DurationHiQ[us],DurationMax[us],LatencyAvg[us],LatencyMin[us],LatencyLoQ[us],LatencyMed[us],LatencyHiQ[us],LatencyMax[us]\n",
						"pattern": "%m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "metricsMedFileTotal",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							},
							{
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "metricsFile",
					"type": "loadJobFile",
					"fileName": "metrics.csv",
					"PatternLayout": {
						"header": "DateTimeISO8601,TypeLoad,CountSucc,CountFail,Size,JobDuration[s],DurationSum[s],TPAvg[op/s],TPLast[op/s],BWAvg[MB/s],BWLast[MB/s],DurationAvg[us],DurationMin[us],DurationLoQ[us],DurationMed[us],DurationHiQ[us],DurationMax[us],LatencyAvg[us],LatencyMin[us],LatencyLoQ[us],LatencyMed[us],LatencyHiQ[us],LatencyMax[us]\n",
						"pattern": "%m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "metricsFile",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							},
							{
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "metricsFileTotal",
					"type": "loadJobFile",
					"fileName": "metrics.total.csv",
					"PatternLayout": {
						"header": "DateTimeISO8601,TypeLoad,CountSucc,CountFail,Size,JobDuration[s],DurationSum[s],TPAvg[op/s],TPLast[op/s],BWAvg[MB/s],BWLast[MB/s],DurationAvg[us],DurationMin[us],DurationLoQ[us],DurationMed[us],DurationHiQ[us],DurationMax[us],LatencyAvg[us],LatencyMin[us],LatencyLoQ[us],LatencyMed[us],LatencyHiQ[us],LatencyMax[us]\n",
						"pattern": "%m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "metricsFileTotal",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							},
							{
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "ioTraceFile",
					"type": "loadJobFile",
					"fileName": "io.trace.csv",
					"PatternLayout": {
						"header": "StorageDriver,StorageNode,ItemPath,IoTypeCode,StatusCode,ReqTimeStart[us],Duration[us],RespLatency[us],DataLatency[us],TransferSize\n",
						"pattern": "%m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "ioTrace",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							},
							{
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "cfgFile",
					"type": "loadJobFile",
					"fileName": "config.log",
					"PatternLayout": {
						"pattern": "%d{ISO8601}{GMT+0} | %c{1} | %t | %m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "cfg",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							}, {
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				}, {
					"name": "partsUploadFile",
					"type": "loadJobFile",
					"fileName": "parts.upload.log",
					"PatternLayout": {
						"pattern": "%m%n"
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "mpu",
								"onMatch": "NEUTRAL",
								"onMismatch": "DENY"
							}, {
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				},
				/*{
					"name" : "extResultsFile",
					"type": "file",
					"fileName": "result.xml",
					"bufferedIO": false,
					"PatternLayout": {
						"header": "<result>\n",
						"footer": "</result>\n",
						"pattern": "<result id=\"%X{job.name}\" StartDate=\"%X{start.date}\" StartTimestamp=\"%X{start.time}\" EndDate=\"%X{end.date}\" EndTimestamp=\"%X{end.time}\" threads=\"%X{total.threads}\" filesize=\"%X{item.data.size}\" %replace{%m}{\"([\\d]+)\\-([A-Za-z0-9]+)\\-([CreatRdUpDl]+)[\\d]*\\-([\\d]*)x?([\\d]*)x?([\\d]*)\"[\\s]+summary:[\\s]+n=\\((\\d+)/\\\u001B*\\[*\\d*m*(\\d+)\\\u001B*\\[*\\d*m*\\);[\\s]+size=\\(([\\.\\d]+[KMGTPE]?B?)\\);[\\s]+t\\[s\\]=\\(([\\.\\d]+)/([\\.\\d]+)\\);[\\s]+TP\\[op/s\\]=\\(([\\.\\d]+)/([\\.\\d]+)\\);[\\s]+BW\\[MB/s\\]=\\(([\\.\\d]+)/([\\.\\d]+)\\);[\\s]+dur\\[us\\]=\\((\\d+)/(\\d+)/(\\d+)/(\\d+)/(\\d+)/(\\d+)\\);[\\s]+lat\\[us\\]=\\((\\d+)/(\\d+)/(\\d+)/(\\d+)/(\\d+)/(\\d+)\\)}{bw=\"$14\" bw_unit=\"MBps\" clients=\"$6\" error=\"$8\" latency=\"$22\" latency_unit=\"us\" operation=\"$3\" runtime=\"$10\" RequestThreads=\"$4\" tps=\"$12\" tps_unit=\"Fileps\" duration=\"$16\" duration_unit=\"us\" latency_min=\"$23\" latency_loq=\"$24\" latency_med=\"$25\" latency_hiq=\"$26\" latency_max=\"$27\" duration_min=\"$17\" duration_loq=\"$18\" duration_med=\"$19\" duration_hiq=\"$20\" duration_max=\"$21\"\/>}%n",
						"noConsoleNoAnsi": true
					},
					"Filters": {
						"Filter": [
							{
								"type": "MarkerFilter",
								"marker": "perfSum",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							},
							{
								"type": "ThresholdFilter",
								"level": "INFO",
								"onMatch": "ACCEPT",
								"onMismatch": "DENY"
							}
						]
					}
				},*/
				{
					"name": "async",
					"type": "Async",
					"blocking": "false",
					"bufferSize": 100000,
					"shutdownTimeout": 10000,
					"AppenderRef": [
						{
							"ref": "stdout"
						}, {
							"ref": "msgFile"
						}, {
							"ref": "3rdPartyFile"
						}, {
							"ref": "errFile"
						}, {
							"ref": "metricsFile"
						}, {
							"ref": "metricsMedFile"
						}, {
							"ref": "metricsFileTotal"
						}, {
							"ref": "metricsMedFileTotal"
						}, {
							"ref": "ioTraceFile"
						}, {
							"ref": "WebUI"
						}, {
							"ref": "cfgFile"
						}, {
							"ref": "partsUploadFile"
						}//, {
						//	"ref": "extResultsFile"
						//}
					]
				}
			]
		},
		"loggers": {
			"root": {
				"level": "debug",
				"additivity": "false",
				"AppenderRef": {
					"ref": "async"
				}
			},
			"logger": [
				{
					"name": "com.emc.mongoose",
					"level": "debug", "additivity": "false", "AppenderRef": { "ref": "async" }
				}
			]
		}
	}
}
