image: docker:stable

variables:
  MONGOOSE_VERSION: $CI_COMMIT_SHA
  MONGOOSE_DOCKER_IMAGE: emcmongoose/mongoose:$MONGOOSE_VERSION

services:
  - docker:dind

before_script:
  - apk-add add --update openjdk8-jre
  - java -version

stages:
  - build
  - test # simple unit/integration tests
  - test_e2e # functional containerized tests
  - deploy

build:
  stage: build
  script:
    - ./gradlew clean dist
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker build -f docker/Dockerfile -t $MONGOOSE_DOCKER_IMAGE .
    - docker push $MONGOOSE_DOCKER_IMAGE
  artifacts:
    paths:
      - build/libs/mongoose-*.jar

test_unit:
  image: openjdk:8-jdk-alpine
  stage: test
  script: ./gradlew test

test_integration:
  image: openjdk:8-jdk-alpine
  stage: test
  script: ./gradlew integrationTest

test_api_remote_config:
  stage: test_e2e
  variables:
    SUITE: api.remote
    TEST: config
  script: ./gradlew robotest

test_api_remote_run:
  stage: test_e2e
  variables:
    SUITE: api.remote
    TEST: run
  script: ./gradlew robotest

test_api_storage_s3:
  stage: test_e2e
  variables:
    SUITE: api.storage
    TEST: s3
  script: ./gradlew robotest

test_legacy_circular_append:
  stage: test_e2e
  variables:
    STORAGE_TYPE: atmos,s3,fs
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: small
    TEST: CircularAppendTest
  script: ./gradlew systemTest --tests com.emc.mongoose.system.$TEST

test_legacy_read_verification_after_circular_update:
  stage: test_e2e
  variables:
    STORAGE_TYPE: fs,s3
    RUN_MODE: local
    CONCURRENCY: low,medium
    ITEM_SIZE: small
    TEST: ReadVerificationAfterCircularUpdateTest
  script: ./gradlew systemTest --tests com.emc.mongoose.system.$TEST
  retry: 2

#CI_COMMIT_REF_NAME: branch/tag name
#CI_COMMIT_SHA: commit revision #
#CI_COMMIT_TAG: tag
