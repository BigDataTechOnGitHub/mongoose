image: docker:stable

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  LEGACY_SYSTEST_IMAGE_NAME: emcmongoose/mongoose-legacy-systest
  MONGOOSE_IMAGE_NAME: emcmongoose/mongoose
  ROBOTEST_IMAGE_NAME: emcmongoose/mongoose-robotest
  ROBOTEST_CONTAINER_WORKING_DIR: /root/mongoose
  SERVICE_HOST: docker # should be used instead of the "localhost"/"127.0.0.1" in GL CI

services:
  - docker:dind

stages:
  - build
  - deploy_docker_image
  - test_functional_legacy
  - test # unit/integration tests
  - test_functional # functional containerized tests
  - deploy

before_script:
  - apk add --no-cache --update openjdk8

build:
  stage: build
  script:
    - ./gradlew clean dist
  artifacts:
    paths:
      - build/libs/mongoose-*.jar

test_unit:
  stage: test
  script:
  - ./gradlew test

test_integration:
  stage: test
  script:
  - ./gradlew integrationTest

deploy_mongoose_image:
  stage: deploy_docker_image
  variables:
    DOCKERFILE: Dockerfile
    IMAGE_NAME: ${MONGOOSE_IMAGE_NAME}
  script:
  - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
  - docker build -f docker/${DOCKERFILE} -t ${IMAGE_NAME}:${CI_COMMIT_SHA} .
  - docker push ${IMAGE_NAME}:${CI_COMMIT_SHA}

.test_robot:
  stage: test_functional
  variables:
    HOST_WORKING_DIR: ${CI_PROJECT_DIR}
    MONGOOSE_IMAGE_VERSION: ${CI_COMMIT_SHA}
    PYTHONPATH: ${PYTHONPATH}:/usr/lib/python2.7/site-packages
  before_script:
    - apk add --no-cache --update python py-pip
    - pip install -U virtualenv
    - pip install -U requests
    - pip install -U robotframework
    - pip install -U robotframework-requests
    - pip install -U robotframework-csvlibrary
  script:
    - export MONGOOSE_VERSION=$(cat src/main/resources/config/defaults.json | grep version | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
    - robot --outputdir build/robotest --suite ${SUITE} --include ${TEST} src/test/robot
  after_script:
    - rebot build/robotest/output.xml
  artifacts:
    paths:
      - build/robotest/*.html
    when: on_failure

test_api_remote_config:
  extends: .test_robot
  variables:
    SUITE: api.remote
    TEST: config

test_api_remote_run:
  extends: .test_robot
  variables:
    SUITE: api.remote
    TEST: run

test_api_storage_s3:
  extends: .test_robot
  variables:
    SUITE: api.storage
    TEST: s3

.test_system_legacy:
  stage: test_functional_legacy
  variables:
    HOST_WORKING_DIR: ${CI_PROJECT_DIR}
    MONGOOSE_IMAGE_VERSION: ${CI_COMMIT_SHA}
  script:
    - ./gradlew systemTest --tests com.emc.mongoose.system.${TEST}
  artifacts:
    paths:
      - build/reports/tests/systemTest/*
    when: on_failure

.test_system_legacy_unstable:
  extends: .test_system_legacy
  retry: 2

test_circular_append:
  extends: .test_system_legacy
  variables:
    STORAGE_TYPE: atmos,s3,fs
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: small
    TEST: CircularAppendTest

test_copy_using_input_path:
  extends: .test_system_legacy
  variables:
    TEST: CopyUsingInputPathTest
    STORAGE_TYPE: fs
    RUN_MODE: local
    CONCURRENCY: single,medium
    ITEM_SIZE: empty,small

test_multipart_create:
  extends: .test_system_legacy
  variables:
    TEST: MultipartCreateTest
    STORAGE_TYPE: s3,swift
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: large

test_multiple_fixed_update_and_single_fixed_read:
  extends: .test_system_legacy
  variables:
    TEST: MultipleFixedUpdateAndSingleFixedReadTest
    STORAGE_TYPE: fs,s3
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: small

test_multiple_random_update_and_multiple_fixed_read:
  extends: .test_system_legacy
  variables:
    TEST: MultipleRandomUpdateAndMultipleFixedReadTest
    STORAGE_TYPE: fs,s3
    RUN_MODE: local,distributed
    CONCURRENCY: medium
    ITEM_SIZE: small,medium

test_pipeline_with_delay:
  extends: .test_system_legacy
  variables:
    TEST: PipelineWithDelayTest
    STORAGE_TYPE: atmos,s3
    RUN_MODE: local,distributed
    CONCURRENCY: single,low,medium
    ITEM_SIZE: medium

test_read_custom_content_verification_fail:
  extends: .test_system_legacy
  variables:
    TEST: ReadCustomContentVerificationFailTest
    STORAGE_TYPE: fs,swift
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: small,medium

test_read_using_variable_path:
  extends: .test_system_legacy
  variables:
    TEST: ReadUsingVariablePathTest
    STORAGE_TYPE: fs
    RUN_MODE: local,distributed
    CONCURRENCY: single,low,medium,high
    ITEM_SIZE: empty,small

test_single_fixed_update_and_single_random_read:
  extends: .test_system_legacy
  variables:
    TEST: SingleFixedUpdateAndSingleRandomReadTest
    STORAGE_TYPE: fs,swift
    RUN_MODE: local,distributed
    CONCURRENCY: single,medium
    ITEM_SIZE: small,medium

test_single_random_update_and_multiple_random_read:
  extends: .test_system_legacy
  variables:
    TEST: SingleRandomUpdateAndMultipleRandomReadTest
    STORAGE_TYPE: fs,swift
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: small,medium

test_tls_read_using_input_file:
  extends: .test_system_legacy
  variables:
    TEST: TlsReadUsingInputFileTest
    STORAGE_TYPE: atmos,s3
    RUN_MODE: local,distributed
    CONCURRENCY: single,low
    ITEM_SIZE: empty,medium

test_unlimited_concurrency_limit_by_rate:
  extends: .test_system_legacy
  variables:
    TEST: UnlimitedConcurrencyLimitByRateTest
    STORAGE_TYPE: atmos,fs
    RUN_MODE: local,distributed
    CONCURRENCY: unlimited
    ITEM_SIZE: small,medium,large

test_unlimited_create:
  extends: .test_system_legacy
  variables:
    TEST: UnlimitedCreateTest
    STORAGE_TYPE: atmos,fs
    RUN_MODE: local,distributed
    CONCURRENCY: low
    ITEM_SIZE: medium,huge

test_weighted:
  extends: .test_system_legacy
  variables:
    TEST: WeightedLoadTest
    STORAGE_TYPE: fs,s3
    RUN_MODE: distributed
    CONCURRENCY: single,medium
    ITEM_SIZE: empty,small

test_circular_read_limit_by_time:
  extends: .test_system_legacy_unstable
  variables:
    TEST:  CircularReadLimitByTimeTest
    STORAGE_TYPE:  fs,swift
    RUN_MODE:  local,distributed
    CONCURRENCY:  single,high
    ITEM_SIZE:  empty,medium

test_create_limit_by_size:
  extends: .test_system_legacy_unstable
  variables:
    TEST: CreateLimitBySizeTest
    STORAGE_TYPE: fs
    RUN_MODE: local
    CONCURRENCY: low,high
    ITEM_SIZE: small,medium

test_read_verification_after_circular_update:
  extends: .test_system_legacy_unstable
  variables:
    STORAGE_TYPE: fs,s3
    RUN_MODE: local
    CONCURRENCY: low,medium
    ITEM_SIZE: small
    TEST: ReadVerificationAfterCircularUpdateTest
