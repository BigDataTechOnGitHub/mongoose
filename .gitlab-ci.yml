image: docker:stable

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  MONGOOSE_IMAGE_NAME: emcmongoose/mongoose
  ROBOTEST_CONTAINER_WORKING_DIR: /root/mongoose
  SERVICE_HOST: docker # should be used instead of the "localhost"/"127.0.0.1" in GL CI

services:
  - docker:dind

stages:
  - build
  - deploy_docker_image
  - test # unit/integration tests
  - test_functional # functional containerized tests
  - deploy

before_script:
  - apk add --no-cache --update openjdk8

build:
  stage: build
  script:
    - ./gradlew clean dist
  artifacts:
    paths:
      - build/libs/mongoose-*.jar

test_unit:
  stage: test
  script:
  - ./gradlew test

test_integration:
  stage: test
  script:
  - ./gradlew integrationTest

deploy_mongoose_image:
  stage: deploy_docker_image
  variables:
    DOCKERFILE: Dockerfile
    IMAGE_NAME: ${MONGOOSE_IMAGE_NAME}
  script:
  - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
  - docker build -f docker/${DOCKERFILE} -t ${IMAGE_NAME}:${CI_COMMIT_SHA} .
  - docker push ${IMAGE_NAME}:${CI_COMMIT_SHA}

.test_robot:
  stage: test_functional
  variables:
    HOST_WORKING_DIR: ${CI_PROJECT_DIR}
    MONGOOSE_IMAGE_VERSION: ${CI_COMMIT_SHA}
    PYTHONPATH: ${PYTHONPATH}:/usr/lib/python2.7/site-packages:src/test/robot/lib
  before_script:
    - apk add --no-cache --update python py-pip
    - pip install -U virtualenv
    - pip install -U requests
    - pip install -U robotframework
    - pip install -U robotframework-requests
    - pip install -U robotframework-csvlibrary
  script:
    - export MONGOOSE_VERSION=$(cat src/main/resources/config/defaults.json | grep version | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
    - robot --outputdir build/robotest --suite ${SUITE} --include ${TEST} src/test/robot
  after_script:
    - rebot build/robotest/output.xml
  artifacts:
    paths:
      - build/robotest/*.html
    when: on_failure

test_api_remote_config:
  extends: .test_robot
  variables:
    SUITE: api.remote
    TEST: config

test_api_remote_run:
  extends: .test_robot
  variables:
    SUITE: api.remote
    TEST: run

test_api_storage_s3:
  extends: .test_robot
  variables:
    SUITE: api.storage
    TEST: s3
