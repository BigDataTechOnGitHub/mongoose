image: npalm:dind-java

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using Kubernetes executor, the variable should be set to
  # tcp://localhost:2375 because of how Kubernetes executor connects services
  # to the job container
  DOCKER_HOST: tcp://docker:2375/
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  # Mongoose
  MONGOOSE_VERSION: $CI_COMMIT_SHA
  MONGOOSE_DOCKER_IMAGE: emcmongoose/mongoose:$MONGOOSE_VERSION

services:
  - docker:dind

before_script:
  - docker info

stages:
  - build
  - test_unit
  - test_integration
  - test_functional
  - test_functional_legacy
  - deploy

build:
  stage: build
  script:
    - ./gradlew clean dist
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker build -f docker/Dockerfile -t $MONGOOSE_DOCKER_IMAGE .
    - docker push $MONGOOSE_DOCKER_IMAGE
  artifacts:
    paths:
      - build/libs/mongoose-*.jar

test_unit:
  stage: test_unit
  script: ./gradlew test

test_integration:
  stage: test_integration
  script: ./gradlew integrationTest

test_api_remote_config:
  stage: test_functional
  variables:
    SUITE: api.remote
    TEST: config
  script: ./gradlew robotest

test_api_remote_run:
  stage: test_functional
  variables:
    SUITE: api.remote
    TEST: run
  script: ./gradlew robotest

test_api_storage_s3:
  stage: test_functional
  variables:
    SUITE: api.storage
    TEST: s3
  script: ./gradlew robotest

test_circular_append:
  stage: test_functional_legacy
  variables:
    STORAGE_TYPE: atmos,s3,fs
    RUN_MODE: local,distributed
    CONCURRENCY: low,medium
    ITEM_SIZE: small
    TEST: CircularAppendTest
  script: ./gradlew systemTest --tests com.emc.mongoose.system.$TEST

test_read_verification_after_circular_update:
  stage: test_functional_legacy
  variables:
    STORAGE_TYPE: fs,s3
    RUN_MODE: local
    CONCURRENCY: low,medium
    ITEM_SIZE: small
    TEST: ReadVerificationAfterCircularUpdateTest
  script: ./gradlew systemTest --tests com.emc.mongoose.system.$TEST
  retry: 2

#CI_COMMIT_REF_NAME: branch/tag name
#CI_COMMIT_SHA: commit revision #
#CI_COMMIT_TAG: tag
